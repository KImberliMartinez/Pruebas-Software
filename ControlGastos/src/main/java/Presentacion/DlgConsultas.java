package Presentacion;

//import Control.ControlPresentacion;
import SistemaControlGastos.Negocio.IconsultaGastos;
import SistemaControlGastos.Negocio.consultaGastos;
import SistemaControlGastos.Negocio.gastosDTO;

import java.text.SimpleDateFormat;

import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class DlgConsultas extends javax.swing.JFrame {

    private List<gastosDTO> gastos;
    private IconsultaGastos p;
    private DefaultTableModel modeloTabla;
    public long idUsuarioRecibido;

    /**
     * Creates new form FrmOpcionesCliente
     * @param idUsuarioRecibido
     */
    public DlgConsultas(long idUsuarioRecibido) {

        p = new consultaGastos();
        initComponents();
        this.idUsuarioRecibido = idUsuarioRecibido;
        llenarTabla();
        llenarTotal();
        this.setVisible(true);

        //centrarVentana(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelOpciones = new javax.swing.JPanel();
        lblTituloSeccion = new javax.swing.JLabel();
        cbxBusqueda = new javax.swing.JComboBox<>();
        btnCancelar = new javax.swing.JButton();
        lblOpciones1 = new javax.swing.JLabel();
        lblOpciones2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        resultadolabel = new javax.swing.JLabel();
        Reporte = new javax.swing.JButton();
        labelTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelOpciones.setBackground(new java.awt.Color(71, 100, 104));
        panelOpciones.setMaximumSize(new java.awt.Dimension(772, 440));
        panelOpciones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTituloSeccion.setFont(new java.awt.Font("Segoe UI Black", 2, 48)); // NOI18N
        lblTituloSeccion.setForeground(new java.awt.Color(204, 204, 204));
        lblTituloSeccion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloSeccion.setText("Consultas");
        panelOpciones.add(lblTituloSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 350, 70));

        cbxBusqueda.setBackground(new java.awt.Color(0, 204, 153));
        cbxBusqueda.setFont(new java.awt.Font("Amazon Ember Light", 0, 18)); // NOI18N
        cbxBusqueda.setForeground(new java.awt.Color(51, 51, 51));
        cbxBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alimentacion", "Ocio", "Transporte", "Todo" }));
        cbxBusqueda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 53, 44), 2));
        cbxBusqueda.setFocusable(false);
        cbxBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxBusquedaActionPerformed(evt);
            }
        });
        panelOpciones.add(cbxBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 230, 40));

        btnCancelar.setBackground(new java.awt.Color(0, 204, 153));
        btnCancelar.setFont(new java.awt.Font("Segoe UI Black", 2, 24)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorderPainted(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.setFocusable(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panelOpciones.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));

        lblOpciones1.setFont(new java.awt.Font("Segoe UI Black", 2, 36)); // NOI18N
        lblOpciones1.setForeground(new java.awt.Color(255, 255, 255));
        lblOpciones1.setText("Registros:");
        panelOpciones.add(lblOpciones1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        lblOpciones2.setFont(new java.awt.Font("Segoe UI Black", 2, 24)); // NOI18N
        lblOpciones2.setForeground(new java.awt.Color(204, 204, 204));
        lblOpciones2.setText("Busqueda por:");
        panelOpciones.add(lblOpciones2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, -1, -1));

        jTabla.setBackground(new java.awt.Color(0, 204, 153));
        jTabla.setFont(new java.awt.Font("Amazon Ember", 0, 12)); // NOI18N
        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Categoria", "Descripcion", "Monto", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTabla);

        panelOpciones.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 570, 260));

        btnAgregar.setBackground(new java.awt.Color(0, 204, 153));
        btnAgregar.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 18)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("AgregarNuevo");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        panelOpciones.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 180, 140, 40));

        btnModificar.setBackground(new java.awt.Color(0, 204, 153));
        btnModificar.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 18)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        panelOpciones.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 230, 140, 40));

        btnEliminar.setBackground(new java.awt.Color(0, 204, 153));
        btnEliminar.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        panelOpciones.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 280, 140, 40));

        resultadolabel.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        panelOpciones.add(resultadolabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 340, 80, 20));

        Reporte.setBackground(new java.awt.Color(0, 204, 153));
        Reporte.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 18)); // NOI18N
        Reporte.setForeground(new java.awt.Color(255, 255, 255));
        Reporte.setText("Reporte");
        Reporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReporteActionPerformed(evt);
            }
        });
        panelOpciones.add(Reporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 330, 140, 40));

        labelTotal.setFont(new java.awt.Font("Segoe UI Variable", 3, 20)); // NOI18N
        labelTotal.setForeground(new java.awt.Color(255, 255, 255));
        panelOpciones.add(labelTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 380, 210, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    // MÃ©todo para llenar la tabla
private void llenarTotal(){
   double total=p.GastosPorUusario(idUsuarioRecibido);
   labelTotal.setText("Total:  "+total);
    System.out.println(""+total);
}

    private void llenarTabla() {
        limpiarTabla(); // Limpia la tabla antes de llenarla
        gastos = p.obtenerLista(idUsuarioRecibido);
        for (gastosDTO pn : gastos) {
            insertarFila(pn);
        }
    }
    private void cbxBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxBusquedaActionPerformed
        buscarCoincidencias();
    }//GEN-LAST:event_cbxBusquedaActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //control.desplegarMenu();
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        DlgAgregar dl = new DlgAgregar();
        dl.idUsuario = idUsuarioRecibido;
        System.out.println("idrecibido   " + idUsuarioRecibido);
        dl.setVisible(true);
        dispose();

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTabla.getSelectedRow();

        if (filaSeleccionada != -1) { // Verificar si se ha seleccionado alguna fila
            Object[] datosFila = new Object[jTabla.getColumnCount()];

            for (int i = 0; i < jTabla.getColumnCount(); i++) {
                datosFila[i] = jTabla.getValueAt(filaSeleccionada, i);
            }

            String id = datosFila[0].toString();
            String categoria = datosFila[1].toString();
            String descripcion = datosFila[2].toString();
            String Monto = datosFila[3].toString();
            String Fecha = datosFila[4].toString();
            DlgModificar dl = new DlgModificar(id, categoria, Monto, idUsuarioRecibido);

            dl.pasarInfo(Monto);
//             dl.idCambio=id;
//             dl.catCambio=categoria;
//             dl.montCambio=Monto;
//             dl.guardarId=idUsuarioRecibido;
            dl.setVisible(true);
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un gasto para continuar", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnModificarActionPerformed
    /**
     * Centra la ventana en la pantalla.
     *
     * @param frame La ventana que se desea centrar.
     */

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTabla.getSelectedRow();

        if (filaSeleccionada != -1) { // Verificar si se ha seleccionado alguna fila
            Object[] datosFila = new Object[jTabla.getColumnCount()];

            for (int i = 0; i < jTabla.getColumnCount(); i++) {
                datosFila[i] = jTabla.getValueAt(filaSeleccionada, i);
            }

            String id = datosFila[0].toString();
            long num = Long.parseLong(id);
            p.Eliminar(num);
            JOptionPane.showMessageDialog(this, "Accion realizada", "", JOptionPane.INFORMATION_MESSAGE);
            limpiarTabla();
            gastos = p.obtenerLista(idUsuarioRecibido);
            for (gastosDTO pn : gastos) {

                insertarFila(pn);
            }
            llenarTotal();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un gasto para continuar", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void ReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReporteActionPerformed
        DlgReporte dle = new DlgReporte();
        dle.idUsuario = idUsuarioRecibido;
        dle.setVisible(true);
        dispose();
    }//GEN-LAST:event_ReporteActionPerformed
    private void buscarCoincidencias() {
        limpiarTabla();
        int sele = cbxBusqueda.getSelectedIndex();
        gastos = p.obtenerLista(idUsuarioRecibido);
        // Obtener las fechas del periodo desde los campos de entrada
//    Date fechaInicio = dateChooserInicio.getDate();
//    Date fechaFin = dateChooserFin.getDate();

        switch (sele) {
            case 0:
                for (gastosDTO pn : gastos) {
                    if (pn.getCategoria().equals("Alimentacion")) {
                        insertarFila(pn);
                    }
                }
                double totalAlimento=p.GastosPorCategoriYusuario(idUsuarioRecibido, "Alimentacion");
                    labelTotal.setText("Total:  "+totalAlimento);
                break;
            case 1:
                for (gastosDTO pn : gastos) {
                    if (pn.getCategoria().equals("Ocio")) {
                        insertarFila(pn);
                    }
                }
                double totalOcio=p.GastosPorCategoriYusuario(idUsuarioRecibido, "Ocio");
                    labelTotal.setText("Total:  "+totalOcio);

                break;
            case 2:
                for (gastosDTO pn : gastos) {
                    if (pn.getCategoria().equals("Transporte")) {
                        insertarFila(pn);
                    }
                }
                double totalTransporte=p.GastosPorCategoriYusuario(idUsuarioRecibido, "Transporte");
                    labelTotal.setText("Total:  "+totalTransporte);
                break;
            case 3:  // Nueva opciÃ³n para mostrar todos los gastos
                for (gastosDTO pn : gastos) {
                    insertarFila(pn);
                }
                double totalTodo=p.GastosPorUusario(idUsuarioRecibido);
                    labelTotal.setText("Total:  "+totalTodo);
                break;
            default:
                JOptionPane.showMessageDialog(this, "Busqueda no valida", "Error", JOptionPane.ERROR_MESSAGE);
                break;
        }
    }

    private void limpiarTabla() {
        modeloTabla = (DefaultTableModel) jTabla.getModel();
        if (modeloTabla.getRowCount() > 0) {
            for (int i = modeloTabla.getRowCount() - 1; i > -1; i--) {
                modeloTabla.removeRow(i);
            }
        }
    }

    private void insertarFila(gastosDTO p) {
        // Crear un formateador de fecha
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");  // Ajusta el formato segÃºn lo necesites

        // Formatear la fecha
        String formato = sdf.format(p.getFecha());

        Object[] fila = {
            p.getId(),
            p.getCategoria(),
            p.getDescripcion(),
            p.getGasto(),
            formato,};
        modeloTabla.addRow(fila);
    }
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DlgConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DlgConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DlgConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DlgConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new DlgConsultas().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Reporte;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cbxBusqueda;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabla;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JLabel lblOpciones1;
    private javax.swing.JLabel lblOpciones2;
    private javax.swing.JLabel lblTituloSeccion;
    private javax.swing.JPanel panelOpciones;
    private javax.swing.JLabel resultadolabel;
    // End of variables declaration//GEN-END:variables

}
